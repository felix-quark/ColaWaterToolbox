:py:mod:`colawater.status.progressor`
=====================================

.. py:module:: colawater.status.progressor

.. autoapi-nested-parse::

   A wrapper for some arcpy progressor methods.

   .. rubric:: Examples

   .. code-block: python

       import colawater.status.progressor as pg

       pg.label("helpful message")
       pg.increment(10) # Defaults to 1



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   colawater.status.progressor.set_progressor
   colawater.status.progressor.label
   colawater.status.progressor.increment



.. py:function:: set_progressor(*args: Any, **kwargs: Any) -> None

   Transparently wraps ``arcpy.SetProgressor()``, but also tracks the type of the
   progressor to ensure safe usage.

   :param \*args: The positional arguments to ``arcpy.SetProgressor()``
   :type \*args: Any
   :param \*\*kwargs: The keyword arguments to ``arcpy.SetProgressor()``
   :type \*\*kwargs: Any


.. py:function:: label(content: str) -> None

   Updates the progressor label.

   :param content: The message content to be added.
   :type content: str


.. py:function:: increment(position: int = 1) -> None

   Increments the progressor by a given value.

   Raises an exception if used with a DEFAULT progressor.

   :param position: The amount to increment the progressor.
   :type position: int

   :raises TypeError: this function was called with an active progressor of type DEFAULT.


