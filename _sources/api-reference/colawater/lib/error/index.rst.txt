:py:mod:`colawater.lib.error`
=============================

.. py:module:: colawater.lib.error

.. autoapi-nested-parse::

   Utilities for handling errors from arcpy.

   .. rubric:: Examples

   .. code-block:: python

       from colawater.errror import fallible

       @fallible
       def foo(bar: str) -> None:
           something_that_raises_exceptions()



Module Contents
---------------


Functions
~~~~~~~~~

.. autoapisummary::

   colawater.lib.error.fallible
   colawater.lib.error.halt



Attributes
~~~~~~~~~~

.. autoapisummary::

   colawater.lib.error.EXPECTED_ERROR_MSG
   colawater.lib.error.UNEXPECTED_ERROR_MSG


.. py:data:: EXPECTED_ERROR_MSG
   :type: str
   :value: Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: python

        """How to resolve common errors:
        'RuntimeError: An expected Field was not found or could not be retrieved properly.'
        'RuntimeError: Attribute column not found'
            You probably selected the wrong layer in the dropdown.
        'RuntimeError: Cannot acquire a lock.'
            Close the attribute tables of the layers with which you are trying to use this tool.
            Another open ArcGIS process could also have a lock on the data, so check for that too.
        'RuntimeError: Objects in this class cannot be updated outside an edit session'
            You probably selected a write-protected layer from cypress by mistake.
        """

    .. raw:: html

        </details>

   Error message text to display on ``SystemError`` and ``RuntimeError``.

.. py:data:: UNEXPECTED_ERROR_MSG
   :type: str
   :value: Multiline-String

    .. raw:: html

        <details><summary>Show Value</summary>

    .. code-block:: python

        """An unexpected error occurred :(
        Go find whomever wrote this tool and ask them about it."""

    .. raw:: html

        </details>

   Error message text to display on non-handled exceptions.

.. py:function:: fallible(f: Callable[Ellipsis, _T]) -> Callable[Ellipsis, Union[_T, NoReturn]]

   Wraps the decorated function in a try-catch block that handles ``SystemError``/``RuntimeError`` and ``Exception``

   Dumps the tool summary and prints a relevant error message depending on the exception.

   .. note::

      The default error message output in ArcGIS often says 'RuntimeError'
      when a SystemError occurs.

   :returns: The return value of the wrapped function.
             Or, if an exception is caught, an ``ExecuteError`` is raised, and the function does not return.
   :rtype: Union[_T, NoReturn]

   :raises ExecuteError: An exception was caught, so this was raised in its place.


.. py:function:: halt(err: Exception, msg: str) -> NoReturn

   Posts the current summary, raises an ExecuteError, and adds an error message.

   :param err: The exception causing the halt.
   :type err: Exception
   :param msg: The message to supply to the exception.
   :type msg: str


